name: test-workflow
on: [push]
jobs:
  tests:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29]
        target: [google_apis]
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: run tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: x86_64
        profile: Nexus 6
        script: ./gradlew connectedCheck
      
    - name: Upload Test Reports Folder
      uses: actions/upload-artifact@v2
      if: ${{ always() }} # IMPORTANT: Upload reports regardless of status
      with:
        name: reports
        path: app/build/reports/androidTests/connected

  report:
    runs-on: ubuntu-latest
    needs: tests 
    if: ${{ always() }} 
    steps:
      - name: Download Test Reports Folder
        uses: actions/download-artifact@v2
        with:
          name: reports

      - name: Android Test Report
        uses: asadmansr/android-test-report-action@v1.2.0
    
#       - run: sudo apt update
#       - run: sudo apt -y install libpulse0
#       - name: Checkout test application
#         uses: actions/checkout@v2

#       - name: Set up JDK 1.8
#         uses: actions/setup-java@v1
#         with:
#           java-version: 1.8

#       - name: Setup Android SDK
#         uses: android-actions/setup-android@v2
        
#       - run: ls -alR $ANDROID_HOME
        
#       - run: $ANDROID_HOME/tools/bin/sdkmanager --list
#       - run: echo y | $ANDROID_HOME/tools/bin/sdkmanager 'emulator'
# #       - run: echo y | $ANDROID_HOME/tools/bin/sdkmanager 'system-images;android-25;google_apis;x86'
#       - run: echo y | $ANDROID_HOME/tools/bin/sdkmanager 'system-images;android-25;google_apis;arm64-v8a'
#       - run: echo no | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name testAVD --abi google_apis/arm64-v8a --package 'system-images;android-25;google_apis;arm64-v8a'
#       - run: $ANDROID_HOME/tools/android list avd
#       - run: $ANDROID_HOME/tools/emulator -avd testAVD -no-window -no-boot-anim -no-audio -verbose

#       - run: ls -al
#       - run: echo "hello world"
